#!/bin/bash

############################### Informações #############################
# Autor: Anônimo000                                                     #
# Data: 05/02/2016                                                      #
# Descrição: Para inúmeras finalidades.                                 #
# Versão: 1.7                                                           #
# Data de modificação: 29/02/2016                                       #
# OS: Apenas para derivados do Debian.                                  #
#                                                                       #
# Sinta-se livre para mudar o código, e deixa-lo a seu gosto            #
# Não retire os devidos créditos                                        #
#########################################################################


###### versão 1.0 #########################
#                                         #
# Criação do menu, das funcões.           #
#                                         #
# Instalação dos programas.               #
#                                         #
# Automatização nas tarefas.              #
###########################################
#
####### versão 1.1 ########################
# Nova opção, instalação de temas.        #
#                                         #
# Erro de esquema das cores concertado.   #
###########################################
#
####### versão 1.2 ########################
# Nova opção, atualização da distribuição.#
###########################################
#
####### versão 1.3 ########################
# Nova opção, remover temas               #
###########################################
#
###### versão 1.4 #########################
# Remoção da lista de programas de insta- #
# lação e movido para um sub-menu.        #
#                                         #
# Nova opção, Lista de programas          #
#                                         #
# Efeitos no menu príncipal               #
###########################################
#
###### versão 1.5 #########################
# Nova opção, Firewall                    #
#                                         #
# Erro na instalação do Gnumeric          #
#                                         #
###########################################
#
##### versão 1.6 ##########################
# Firewall permanente adicionado          #
#                                         #
# Nova opção, GIT                         #
#                                         #
# Aperfeiçoado algumas funções            #
#                                         #
# Script mais discreto sem mostrar muitas mensagens
#                                         #
# Mensagens de log são geradas            #
###########################################
#
###### versão 1.7 #########################
# Aperfeçoamentos nas funções             #
###########################################
#
verm="\033[1;31m"
verde="\033[1;32m"
amarelo=`echo "\033[1;33m"`
azul=`echo "\033[1;34m"`
branco=`echo "\033[0;37m"`
NORMAL=`echo "\033[m"`

########################################################
#                menu principal                        #
########################################################

echo -e "${azul}Checando sua distribuição...${NORMAL}"
sleep 1
if [ -e /etc/debian_version ]; then

function menu {
clear
echo -e $verm "====================================== ${NORMAL}"
sleep 0.1
echo -e $verde "            Knife System             ${NORMAL}"
sleep 0.1
echo -e $verm" ====================================== ${NORMAL}"
echo -e "${branco}                             versão 1.7"
echo ""
sleep 0.1
echo -e "${amarelo} A)${verm} Instalar programas${NORMAL}"
sleep 0.1
echo -e "${amarelo} B)${verm} Remover programas${NORMAL}"
sleep 0.1
echo -e "${amarelo} C)${verm} Reparar erros de dependências${NORMAL}"
sleep 0.1
echo -e "${amarelo} D)${verm} Procurar programas${NORMAL}"
sleep 0.1
echo -e "${amarelo} E)${verm} Procurar por arquivos${NORMAL}"
sleep 0.1
echo -e "${amarelo} F)${verm} Instalar temas${NORMAL}"
sleep 0.1
echo -e "${amarelo} G)${verm} Atualizar distribuição${NORMAL}"
sleep 0.1
echo -e "${amarelo} H)${verm} Remover temas${NORMAL}"
sleep 0.1
echo -e "${amarelo} I)${verm} Lista de programas${NORMAL}"
sleep 0.1
echo -e "${amarelo} J)${verm} Firewall${NORMAL}"
sleep 0.1
echo -e "${amarelo} K)${verm} GIT${NORMAL}"
sleep 0.1

echo ""
echo -e "${azul}Q)${amarelo} Sair${NORMAL}"
echo -e $verde"Escolha uma das opções:"

read -n1 inst
}


########################################################
#               Funções do menu principal              #
########################################################

##### Instalar programas #####

function instal() {
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Instalar               ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   echo ""
   echo -e $amarelo"Digite o nome do programa a ser instalado:${NORMAL}"
   read inst
   apt-get update
   apt-get -y install $inst
}

###### Remover programas #####

function remov() {
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Remover               ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   echo ""
   echo -e $amarelo"Digite o nome do programa a ser removido:${NORMAL}"
   read rmove
   echo -e "${amarelo}Removendo programa, por favor aguarde...${NORMAL}"
   sleep 1
   apt-get -y remove --purge $rmove > /tmp/KS_remove.log
   apt-get -y autoremove > /tmp/KS_aremove.log
   echo ""
   echo -e "${verde}Programa removido com sucesso${NORMAL}"
   sleep 2
}

###### Repara dependências #####

function repair() {
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Reparar                ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   echo ""
   echo -e "${amarelo}Reparando... aguarde...${NORMAL}"
   echo ""
   sleep 1
   apt-get -f install > /tmp/KS_finstall.log
   apt-get -y autoremove > /tmp/KS_autremove.log
   apt-get clean > /tmp/KS_clean.log
   dpkg --configure -a > /tmp/KS_configa.log
   echo -e "${verde}Dependências reparadas com sucesso${NORMAL}"
   sleep 2
}

###### Procurar programas #####

function achar() {
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Procurar               ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   echo ""
   echo -e $amarelo"Digite o nome do programa:${NORMAL}"
   read ach
   dpkg -l $ach
   sleep 5
   fazer

}

###### Procurar arquivos #####

function location() {
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Procurar               ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   echo ""
   echo -e $amarelo"Digite o nome do arquivo:${NORMAL}"
   read achha
   echo -e "${verm}Atualizando arquivos no sistema, dependendo do espaço ocupado no seu HD isso${NORMAL}"
   echo -e "${verm}poderá levar alguns minutos. Aguarde...${NORMAL}"
   echo ""
   updatedb
   locate $achha | grep $achha
   echo ""
   echo -e "${verde}Pressione ${amarelo}[ Q ] ${verde}para voltar${NORMAL}"
   read -n1 locatResp

   case $locatResp in

     Q | q)fazer;
           ;;

      *)reset;
        location;
    esac
}

##### Atualizar distro ######

function atual() {
   echo -e "${azul}Em alguns casos de atualização completa do sistema${NORMAL}"
   echo -e "${azul}podem ocorrer erros nas dependências, causando perda total do${NORMAL}"
   echo -e "${azul}sistema, levando á uma nova formatação.${NORMAL}"
   echo ""
   echo -e "${verde}Deseja realmente atualizar sua distribuição? [S/N]${NORMAL}"
   read -n1 atualit

   if [ $atualit == "n" ];then
      menu
   else
    clear
    echo -e $amarelo"****************************************"
    echo -e "${verde}        Atualizando sistema!${NORMAL}"
    echo -e $amarelo"****************************************"
    sleep 2
    echo ""
    apt-get -uy dist-upgrade
    echo -e $verde"Atualização terminada"
    menu
fi

}

##### Instalar temas ###########
#                              #
################################

function tema() {
function instTema() {
    echo -e "${branco}Insira o nome do seu tema, já descompactado e levando em conta que${NORMAL}"
    echo -e "${branco}ele esteja na  mesma pasta que este script:${NORMAL}"
    read theme

    if [ -e $theme ];then
    clear
    mv -f $theme /usr/share/themes
    sleep 2
    echo -e "${verde}Tema adicionado com sucesso!${NORMAL}"
    sleep 1
    echo -e "${branco}O tema já está pronto para ser instalado, basta apenas${NORMAL}"
    echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
    sleep 2
    clear
  else
    clear
    echo -e "${verm}Arquivo não encontrado!${NORMAL}"
    sleep 1
    clear
    instTema
  fi
  }

  ##### Cursor ######

 function cursor() {
    echo -e "${verde}Insira o nome do seu cursor, já descompactado e levando em conta que ele esteja em sua pasta HOME:${NORMAL}"
    read curso

   if [ -e .icons ];then
    clear
    mv $curso .icons
    sleep 2
    echo -e "${verde}Cursor adicionado com sucesso!${NORMAL}"
    sleep 1
    clear
    echo -e "${branco}O cursor já está pronto para ser instalado, basta apenas${NORMAL}"
    echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
    sleep 2
    reset
  else
    echo -e "${verm}Diretório .icons não foi encontrado em HOME${NORMAL}"
    sleep 1
    echo -e "${azul}Criando diretório em sua home... "
    mkdir .icons
    sleep 2
    echo -e "${verde}Diretório criado, rode o comando novamente"
    sleep 2
    clear
    cursor

  fi
 }

 ##### Ícones #####

  function icone() {
    echo -e "${verde}Insira o nome do seu ícone, já descompactado e levando em conta que ele esteja em sua pasta HOME:${NORMAL}"
    read icon

    if [ -e $icon ];then
    clear
    mv -f $icon /usr/share/icons
    sleep 2
    echo -e "${verde}Ícone adicionado com sucesso!${NORMAL}"
    sleep 1
    clear
    echo -e "${branco}O ícone já está pronto para ser instalado, basta apenas${NORMAL}"
    echo -e "${branco}você ir nas configurações e muda-lo${NORMAL}"
    sleep 2
    reset
  else
    clear
    echo -e "${verm}Arquivo não encontrado!${NORMAL}"
    sleep 1
    clear
    icone
  fi
}

function tool() {
  clear
  echo -e "${azul}Instalando gnome-tweak-tool${NORMAL}"
  sleep 2
  apt-get -y install gnome-tweak-tool
  tema
}
  echo -e "${verde}O que deseja instalar?"
  echo ""

  echo -e "${amarelo}1) ${azul} Temas${NORMAL}"
  echo -e "${amarelo}2) ${azul} Cursor${NORMAL}"
  echo -e "${amarelo}3) ${azul} Ícones${NORMAL}"
  echo -e "${amarelo}4) ${azul} Gnome-Tweak-Tool${NORMAL}"
  echo ""
  echo
  echo -e "${azul}X) ${amarelo}Voltar ao menu principal${NORMAL}"
  read -n1 temeInsta

  while [ temeInsta != '' ]
  do
    case $temeInsta in

      1) reset;
         instTema;
         tema;
         ;;

         2) reset;
            cursor;
            tema;
            ;;

            3) reset;
               icone;
               tema;
               ;;

               4) reset;
                  tool;
                  tema;
                  ;;

                  x) fazer;
                     ;;

                     *)reset;
                       tema;
                       ;;
    esac
done
}

### Remover temas ######
#                      #
########################

function removeTemas() {
  function rmTema () {
    echo -e "${branco}Insira o nome do tema a se removido:${NORMAL}"
    echo ""
    read rmtheme

    if [ -e /usr/share/themes/$rmtheme ];then
      sleep 2
      rm -r /usr/share/themes/$rmtheme
      echo -e "${verde}Tema removido com sucesso!"
      sleep 1
      echo -e "${azul}Basta apenas você ir em aparência e muda-lo${NORMAL}"
      sleep 2
      clear
      removeTemas
    else
      echo -e "${verm}Tema não encontrado!"
      sleep 2
      clear
      rmTema
    fi
  }

##### Remover Cursor ######

  function rmCursor() {
    echo -e "${branco}Insira o nome do cursor a ser removido:${NORMAL}"
    echo ""
    read rmcurso

    if [ -e .icons/$rmcurso ];then
      sleep 2
      rm -r .icons/$rmcurso
      echo -e "${verde}Cursor removido com sucesso${NORMAL}"
      sleep 1
      echo -e "{branco}Basta apenas você ir em aparência e muda-lo${NORMAL}"
      sleep 2
      removeTemas
    else
      echo -e "${verm}Cursor não encontrado"
      sleep 2
      clear
      rmCursor
    fi
  }

###### Remover ícones ######

  function rmIcones() {
    echo -e "${branco}Insira o nome do ícone a ser removido:${NORMAL}"
    echo ""
    read rmicon

    if [ -e /usr/share/icons/$rmicon ];then
      sleep 2
      rm -r /usr/share/icons/$rmicon
      echo -e "${verde}Ícone removido com sucesso!${NORMAL}"
      sleep 1
      echo -e "${branco}Basta apenas você ir em aparência e muda-lo${NORMAL}"
      sleep 2
      clear
      removeTemas
    else
      echo -e "${verm}Ícone não encontrado!${NORMAL}"
      sleep 2
      clear
      rmIcones
    fi
  }

  ###### Menu de remoção de temas ######

  echo -e "${verde}O que deseja remover?"
  echo ""

  echo -e "${amarelo}1) ${azul} Temas${NORMAL}"
  echo -e "${amarelo}2) ${azul} Cursor${NORMAL}"
  echo -e "${amarelo}3) ${azul} Ícones${NORMAL}"
  echo ""
  echo -e "${azul}X) ${amarelo}Voltar ao menu principal${NORMAL}"
  read -n1 maintheme

  while [ maintheme != '' ]
  do
    case $maintheme in

      1) clear;
         rmTema;
         removeTemas;
         ;;

         2) clear;
            rmCursor;
            removeTemas;
            ;;

            3) clear;
               rmIcones;
               removeTemas;
               ;;

               x) fazer;
                  ;;

                  *) reset;
                     removeTemas;

 esac
done
}

###### Usando o GIT ####################
#      Opção ainda em fase beta        #
########################################

function github () {
  function gitClon () {
    echo -e "${azul}Clonar um repositorio remoto${NORMAL}"
    echo ""
    echo -e "${verde}Insira o link do repositório remoto:${NORMAL}"
    read cloResp

    echo -e "${azul}Clonando repositório...${NORMAL}"
    git clone $cloResp
    if [ $? == "0" ];then
      echo -e "${verde}Diretório clonado com sucesso!${NORMAL}"
      sleep 2
      github

    else
      echo -e "${verm}Não foi possível clonar diretório remoto${NORMAL}"
      sleep 1
      echo ""
      echo "Verifique o link do diretório remoto e tente novamente"
      echo "O link deve atender esse formato https://github.com/User/exemplo"
      echo ""
      sleep 2
      gitClon
    fi
  }

  function gitAdd () {
    echo -e "${azul}Adicionar um projeto a lista de prjetos pendentes${NORMAL}"
    echo -e "${azul}Isso não irá adicinar ao seu diretório remoto${NORMAL}"
    echo ""
    echo -e "${verde}Digite o caminho onde se encontra o projeto:${NORMAL}"
    read addResp

    if [ -e $addResp ];then
      reset
      echo -e "${amarelo}Adicionando projeto...${NORMAL}"
      sleep 2
      git add $gitAdd > /dev/null
      echo -e "${verde}Projeto adicionado com sucesso${NORMAL}"
      sleep 2
      github
    else
      reset
      echo -e "${verm}Diretório do projeto não encontrado${NORMAL}"
      sleep 2
      gitAdd
    fi
  }

  function gitLogin () {
    reset
    echo -e "${azul}Login para entrar no seu git${NORMAL}"
    echo -e "${azul}levando em conta que já tenha realizado git add do seu projeto${NORMAL}"
    sleep 3
    echo ""
    git push
    github
  }

  function gitStatus () {
    echo -e "${amarelo}Verificar status do seu git no momento${NORMAL}"
    sleep 2
    git status
    echo ""
    echo -e "${verde}Pressione ${amarelo}[ Q ]${verde} para sair${NORMAL}"
    read -n1 staResp

    case $staResp in
      Q | q)github;
             ;;

       *)gitStatus;
    esac
  }

  function gitCommit () {
    function confirm() {
     git commit
    }
     echo -e "${azul}Enviar definitivamente seu projeto ${NORMAL}"
     echo ""
     echo -e "${amarelo}1) ${verde}Verificar status${NORMAL}"
     echo -e "${amarelo}2) ${verde}Confirmar envio${NORMAL}"
     read comResp

     case $comResp in

       1)reset;
         gitStatus;
         ;;

         2)reset;
           confirm;
           ;;

           *)reset;
             gitCommit;
    esac

  }

  function gitIni () {
    echo -e "${azul}Criando diretório remoto vazio${NORMAL}"
    sleep 2
    git init
    echo -e "${verde}Diretório criado"
    sleep 1
    github
  }

  echo -e "${branco}Essa opção ainda está em fase de desenvolvimento e adaptações${NORMAL}"
  echo ""
  echo ""
  sleep 0.1
  echo -e "${azul}1) ${verm}Clonar repositório remoto${NORMAL}"
  sleep 0.1
  echo -e "${azul}2) ${verm}Adicionar projeto${NORMAL}"
  sleep 0.1
  echo -e "${azul}3) ${verm}Login${NORMAL}"
  sleep 0.1
  echo -e "${azul}4) ${verm}Enviar projeto remoto${NORMAL}"
  sleep 0.1
  echo -e "${azul}5) ${verm}Criar pasta${NORMAL}"
  sleep 0.1
  echo -e "${azul}6) ${verm}Status do git${NORMAL}"
  sleep 0.1
  echo ""
  echo -e "${verm}Q) ${azul}Voltar para o menu princípal${NORMAL}"
  read -n1 gitResp

  while [ gitResp != '' ];do
    case $gitResp in

      1)reset;
        gitClon;
        ;;

        2)reset;
          gitAdd;
          ;;

          3)reset;
            gitLogin;
            ;;

            4)reset;
              gitCommit;
              ;;

              5)reset;
                gitIni;
                ;;

                6)reset;
                  gitStatus;
                  ;;

                  Q | q)fazer;
                  ;;

                  *)github;

  esac
done
}


############# Firewall ##################

# Área destinada a usuários avançados que possuam conhecimentos para modificar
# esse pequeno firewall de acordo com suas necessidades
#

function firew() {
 startFire() {
   clear
   echo -e "${verm} ATENÇÃO!${NORMAL}"
   echo ""
   sleep 1
   echo -e ${amarelo}"Este é apenas um símples firewall criado por"
   echo -e ${amarelo}"Tácio de Jesus Andrade e editado por mim"
   echo ""
   echo -e ${amarelo}"Ele pode não funcionar em algumas máquinas"
   echo -e ${amarelo}"dependendo muito dos serviços que nela roda"
   echo ""
   echo -e ${amarelo}"Edite-o de acordo com suas necessidades"
   sleep 10
   clear
   ########################
    # Zera todas as Regras #
    ########################
      iptables -F

    ########################################
    # Bloqueia tudo, nada entra e nada sai #
    ########################################
      iptables -P INPUT DROP
      iptables -P FORWARD DROP
      iptables -P OUTPUT DROP

    ############################################################################
    # Impede ataques DoS a maquina limitando a quantidade de respostas do ping #
    ############################################################################
     iptables -A INPUT -p icmp --icmp-type echo-request -m limit --limit 1/s -j ACCEPT

    #################################
    # Bloqieia completamente o ping #
    #################################
      iptables -A INPUT -p icmp --icmp-type echo-request -j DROP

    ##########################
    # Politicas de segurança #
    ##########################
      echo 0 > /proc/sys/net/ipv4/conf/all/accept_source_route # Impede falsear pacote
      echo 0 > /proc/sys/net/ipv4/conf/all/accept_redirects # Perigo de descobrimento de rotas de roteamento (desativar em roteador)
      echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts # Risco de DoS
      echo 1 > /proc/sys/net/ipv4/tcp_syncookies # Só inicia a conexão quando recebe a confirmação, diminuindo a banda gasta
      echo 1 > /proc/sys/net/ipv4/conf/default/rp_filter # Faz o firewall responder apenas a placa de rede que recebeu o pacote
      iptables -A INPUT -m state --state INVALID -j DROP # Elimina os pacotes invalidos

    #################################
    # Libera conexoes estabelecidas #
    #################################
      iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
      iptables -A FORWARD -m state --state RELATED,ESTABLISHED,NEW -j ACCEPT
      iptables -A OUTPUT -m state --state RELATED,ESTABLISHED,NEW -j ACCEPT
      iptables -A INPUT -i lo -j ACCEPT

      iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT
      iptables -A INPUT -p tcp --dport 80 -j ACCEPT

    ################################
    # Previne ataque de SYS Flood  #
    ################################
      iptables -t filter -N syn-chain
      iptables -t filter -A syn-chain -p tcp --syn -m limit --limit 2/s -j ACCEPT
      iptables -t filter -A syn-chain -j DROP

    echo ""
    echo -e "${verde}Firewall ativado com sucesso.${NORMAL}"
    sleep 2
    reset
    firew
}
 function stopFire() {
     clear
     echo -e "${verm} Parando firewall..."
     sleep 2
     # -----------------------------------------------------------------
     # Remove todas as regras existentes
     # -----------------------------------------------------------------
       iptables -F
       iptables -X
       iptables -t mangle -F
     # -----------------------------------------------------------------
     # Reseta as politicas padrões, aceitar tudo
     # -----------------------------------------------------------------
       iptables -P INPUT   ACCEPT
       iptables -P OUTPUT  ACCEPT
       iptables -P FORWARD ACCEPT

      echo 1 > /proc/sys/net/ipv4/conf/all/accept_source_route
      echo 1 > /proc/sys/net/ipv4/conf/all/accept_redirects
      echo 0 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
      echo 0 > /proc/sys/net/ipv4/tcp_syncookies
      echo 0 > /proc/sys/net/ipv4/conf/default/rp_filter
     reset
     firew
 }

function permFire() {
 reset
 echo -e "${verde}Esse firewall será 'ativado' toda vez que o sistema for inicializado${NORMAL}"
 sleep 3
 echo  ""

 echo "
      iptables -F
      iptables -P INPUT DROP
      iptables -P FORWARD DROP
      iptables -P OUTPUT DROP
      iptables -A INPUT -p icmp --icmp-type echo-request -m limit --limit 1/s -j ACCEPT
      iptables -A INPUT -p icmp --icmp-type echo-request -j DROP
      echo 0 > /proc/sys/net/ipv4/conf/all/accept_source_route
      echo 0 > /proc/sys/net/ipv4/conf/all/accept_redirects
      echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
      echo 1 > /proc/sys/net/ipv4/tcp_syncookies
      echo 1 > /proc/sys/net/ipv4/conf/default/rp_filter
      iptables -A INPUT -m state --state INVALID -j DROP
      iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
      iptables -A FORWARD -m state --state RELATED,ESTABLISHED,NEW -j ACCEPT
      iptables -A OUTPUT -m state --state RELATED,ESTABLISHED,NEW -j ACCEPT
      iptables -A INPUT -i lo -j ACCEPT
      iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT
      iptables -A INPUT -p tcp --dport 80 -j ACCEPT
      iptables -t filter -N syn-chain
      iptables -t filter -A syn-chain -p tcp --syn -m limit --limit 2/s -j ACCEPT
      iptables -t filter -A syn-chain -j DROP" > firewall.sh

      mv firewall.sh /etc/init.d
      ln -s /etc/init.d/firewall.sh /etc/rc3.d/S54firewall

  echo -e "${verde}Firewall ativado com sucesso${NORMAL}"
  sleep 2

  firew
}

function permStopFire() {
 reset
 echo -e "${azul}Parando firewall...${NORMAL}"
 sleep 2
 rm /etc/rc3.d/S54firewall
 rm /etc/init.d/firewall.sh
 echo -e "${verde}Firewall parado com sucesso${NORMAL}"
 sleep 2
 firew
}

 echo -e "${amarelo}1)${verde} Iniciar firewall${NORMAL}"
 echo -e "${amarelo}2)${verde} Iniciar firewall ${branco}(Permanente)${NORMAL}"
 echo -e "${amarelo}0)${verm} Parar firewall${NORMAL}"
 echo -e "${amarelo}9)${verm} Parar firewall ${branco}(Permanente)${NORMAL}"
 echo ""
 echo -e "${verde}X)${amarelo}Voltar ao menu princípal${NORMAL}"

 read -n1 respFire


 case $respFire in

  1) startFire;
     reset;
     ;;
    2) permFire;
       reset;
       ;;

   0) stopFire;
      reset
      ;;

   9) permStopFire;
      reset;
      ;;

    X | x) fazer;
           ;;

     *) reset;
        firew;

 esac
}

########### Instalação de programas ###################

function programas() {

function internet() {
   echo "Esse processo pode levar alguns minutos dependendo da sua conexão"
   echo "com a internet. Não imterrompa o processo de instalação"
   echo "Alguns programas não poderão ser instalados, se eles não estiverem nos repositório"
   echo ""
   echo "Deseja continuar [S/N]?"
   read -n1 resp
   if [ $resp = "s" ];then
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Internet               ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   sleep 5
   apt-get update
   apt-get -y install chromium #navegador
   apt-get -y install firefox #navegador
   apt-get -y install hexchat #chat IRC
   apt-get -y install skype #Bate-papo(vídeo chamada)
   apt-get -y install adobe-flashplugin #flash
   apt-get -y install openjdk-8-jre #Java
   apt-get -y install proxychains #proxy de rede
   apt-get -y install qbittorrent #Cliente torrent
   apt-get -y install thunderbird #Cliente de Email
   apt-get -y install filezilla #Transferência de arquivo viab FTP
   apt-get -y install nmap zenmap #Scaner de rede

   else
     menu
fi

}

function escritorio() {
   echo "Esse processo pode levar alguns minutos dependendo da sua conexão"
   echo "com a internet. Não imterrompa o processo de instalação"
   echo "Alguns programas não poderão ser instalados, se eles não estiverem nos repositório"
   echo ""
   echo "Deseja continuar [S/N]?"
   read -n1 resp
   if [ $resp = "s" ];then
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Escritório              ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   sleep 5
   apt-get update
   apt-get -y install libreoffice #Office
   apt-get -y install abiword
   apt-get -y install evince
   apt-get -y install scribus
   apt-get -y install gnumeric
   apt-get -y install vim
   else
     menu
fi
}

function graficos() {
   echo "Esse processo pode levar alguns minutos dependendo da sua conexão"
   echo "com a internet. Não imterrompa o processo de instalação"
   echo "Alguns programas não poderão ser instalados, se eles não estiverem nos repositório"
   echo ""
   echo "Deseja continuar [S/N]?"
   read -n1 resp
   if [ $resp = "s" ];then
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Gráficos               ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   sleep 5
   apt-get update
   apt-get -y install gimp gimp-data-extras #Editor de imagens
   apt-get -y install inkscape #Criação de imagens vetoriais
   apt-get -y install blender #Edição 3D
   apt-get -y install kolourpaint4
   apt-get -y install umbrello
   apt-get -y install pencil
   apt-get -y install logisim
   apt-get -y install dia
   else
     menu
fi
}

function jogos() {
   echo "Esse processo pode levar alguns minutos dependendo da sua conexão"
   echo "com a internet. Não imterrompa o processo de instalação"
   echo "Alguns programas não poderão ser instalados, se eles não estiverem nos repositório"
   echo ""
   echo "Deseja continuar [S/N]?"
   read -n1 resp
   if [ $resp = "s" ];then
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Jogos                  ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   sleep 5
   apt-get update
   apt-get -y install minetest #Estilo minecraft
   apt-get -y install warzone2100
   apt-get -y install wine
   apt-get -y install playonlinux #Rodar programas do Windows
   apt-get -y install openarena
   apt-get -y install flightgear
   apt-get -y install supertux
   else
     menu
fi
}

function midia() {
   echo "Esse processo pode levar alguns minutos dependendo da sua conexão"
   echo "com a internet. Não imterrompa o processo de instalação"
   echo "Alguns programas não poderão ser instalados, se eles não estiverem nos repositório"
   echo ""
   echo "Deseja continuar [S/N]?"
   read -n1 resp
   if [ $resp = "s" ];then
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}mídia                  ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   sleep 5
   apt-get update
   apt-get -y install brasero #Gravador de disco
   apt-get -y install vlc #Reprodutor de vídeo
   apt-get -y install rhythmbox #Reprodutor de áudio
   apt-get -y install openshot #Edição de vídeo
   apt-get -y install cinerrela #Edição de vídeo
   apt-get -y install kdenlive #Edição de vídeo
   apt-get -y install virtualbox-qt #Máquina virtual
   apt-get -y install audacity #Editor de áudio
   apt-get -y install cheese #Webcam
   else
     menu
fi
}

function dev() {
   echo "Esse processo pode levar alguns minutos dependendo da sua conexão"
   echo "com a internet. Não imterrompa o processo de instalação"
   echo "Alguns programas não poderão ser instalados, se eles não estiverem no repositório"
   echo ""
   echo "Deseja continuar [S/N]?"
   read -n1 resp
   if [ $resp = "s" ];then
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Desenvolvimento        ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   sleep 5
   apt-get update
   apt-get -y install atom
   apt-get -y install openjdk-8-jre
   apt-get -y install portugol-studio
   apt-get -y install eclipse
   apt-get -y install qtcreator
   apt-get -y install netbeans
   apt-get -y install geany
   apt-get -y install bluefish
   apt-get -y install python
   apt-get -y install perl
   apt-get -y install ipython
   apt-get -y install pycompile
   apt-get -y install mysql-workbench
   apt-get -y install pgadmin3
   apt-get -y install lazarus
   apt-get -y install vim
   apt-get install
else
   menu
fi

}

function formatacao() {
  function skype() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               Skype                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install skype
  }

  function vlc() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               VLC                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install vlc
  }

  function rhythmbox() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               Rhythmbox                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install rhythmbox
  }

  function wine() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               Emulador                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install wine
    apt-get -y install playonlinux
  }

  function brasero() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               Brasero                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install brasero
  }

  function gimp() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               Gimp                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install gimp gimp-data-extras
  }

  function torrent() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               QBitTorrent                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install qbittorrent
  }

  function office() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               LibreOffice                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install libreoffice
  }

  function flash-plugin() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               Flash                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install adobe-flashplugin
  }

  function paint() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               Paint                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install kolourpaint4
  }

  function pluma() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               Pluma                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install pluma
  }

  function chrome() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               Chrome                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install chromium
  }

  function firefox() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               Firefox                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install firefox
  }

  function cheese() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               Chesse                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install cheese
  }

  function java() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               Java                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install openjdk-8-jre
  }

  function all() {
    echo -e "${verde}###########################################"
    echo -e "${amarelo}               TODOS                     "
    echo -e "${verde}###########################################"
    echo ""
    sleep 2
    apt-get -y update
    apt-get -y install kolourpaint4
    apt-get -y install adobe-flashplugin
    apt-get -y install libreoffice
    apt-get -y install qbittorrent
    apt-get -y install skype
    apt-get -y install openjdk-8-jre
    apt-get -y install vlc
    apt-get -y install rhythmbox
    apt-get -y install wine
    apt-get -y install playonlinux
    apt-get -y install brasero
    apt-get -y install gimp gimp-data-extras
    apt-get -y install pluma
    apt-get -y install chromium
    apt-get -y install firefox
    apt-get -y install cheese
  }

  ########### Menu da função #############

  echo -e "${azul}Escolha uma das opções abaixo a serem instaladas:${NORMAL}"
  echo ""
  echo -e "${amarelo}A) ${verm}Skype${NORMAL}"
  echo -e "${amarelo}B) ${verm}VLC${NORMAL}"
  echo -e "${amarelo}C) ${verm}Rhythmbox${NORMAL}"
  echo -e "${amarelo}D) ${verm}Emulação de games${NORMAL}"
  echo -e "${amarelo}E) ${verm}Brasero${NORMAL}"
  echo -e "${amarelo}F) ${verm}Gimp${NORMAL}"
  echo -e "${amarelo}G) ${verm}qbittorrent${NORMAL}"
  echo -e "${amarelo}H) ${verm}LibreOffice${NORMAL}"
  echo -e "${amarelo}I) ${verm}flash-plugin${NORMAL}"
  echo -e "${amarelo}J) ${verm}Paint${NORMAL}"
  echo -e "${amarelo}K) ${verm}Pluma${NORMAL}"
  echo -e "${amarelo}L) ${verm}Chromium${NORMAL}"
  echo -e "${amarelo}M) ${verm}Firefox${NORMAL}"
  echo -e "${amarelo}N) ${verm}Cheese${NORMAL}"
  echo -e "${amarelo}O) ${verm}Open-JDK${NORMAL}"
  echo -e "${amarelo}P) ${verm}Todos${NORMAL}"
  echo ""
  echo -e "${azul}0) ${verde}Voltar ao menu principal${NORMAL}"



  read -n1 format

  while [ $format != '' ]
  do
    case $format in
      a)reset;
        skype;
        clear;
        formatacao;
        ;;

      b)reset;
        vlc;
        clear
        formatacao;
        ;;

        c)reset;
          rhythmbox;
          clear
          formatacao;
          ;;

          d)reset;
            wine;
            clear;
            formatacao;
            ;;

            e)reset;
              brasero;
              clear;
              formatacao;
              ;;

              f)reset;
                gimp;
                clear;
                formatacao;
                ;;

                g)reset;
                  torrent;
                  clear;
                  formatacao;
                  ;;

                  h)reset;
                    office;
                    clear
                    formatacao;
                    ;;

                    i)reset;
                      flash-plugin;
                      clear;
                      formatacao;
                      ;;

                      j)reset;
                        paint;
                        clear;
                        formatacao;
                        ;;

                        k)reset;
                          pluma;
                          clear;
                          formatacao;
                          ;;

                          l)reset;
                            chrome;
                            clear;
                            formatacao;
                            ;;

                            m)reset;
                              firefox;
                              clear;
                              formatacao;
                              ;;

                              n)reset;
                                cheese;
                                clear
                                formatacao;
                                ;;

                                o)reset;
                                  java;
                                  clear;
                                  formatacao;
                                  ;;

                                p)reset;
                                  all;
                                  clear
                                  formatacao;
                                  ;;

                                 0)reset;
                                   fazer;
                                    ;;

                                    *)reset;
                                      formatacao;
                                      ;;

esac
done

}

function completo() {
   echo "Esse processo pode levar alguns minutos dependendo da sua conexão"
   echo "com a internet. Não imterrompa o processo de instalação"
   echo "Alguns programas não poderão ser instalados, se eles não estiverem nos repositório"
   echo ""
   echo "Deseja continuar [S/N]?"
   read -n1 resp
   if [ $resp = "s" ];then
   echo -e $verm"#############################################${NORMAL}"
   echo -e "                   ${verde}Full                   ${NORMAL}"
   echo -e $verm"#############################################${NORMAL}"
   sleep 5
   apt-get update
   apt-get -y install chromium #navegador
   apt-get -y install firefox #navegador
   apt-get -y install hexchat #chat IRC
   apt-get -y install skype #Bate-papo(vídeo chamada)
   apt-get -y install adobe-flashplugin #flash
   apt-get -y install openjdk-8-jre #Java
   apt-get -y install proxychains #proxy de rede
   apt-get -y install qbittorrent #Cliente torrent
   apt-get -y install thunderbird #Cliente de Email
   apt-get -y install filezilla #Transferência de arquivo viab FTP
   apt-get -y install nmap zenmap #Scaner de rede
   apt-get -y install libreoffice #Office
   apt-get -y install abiword
   apt-get -y install evince
   apt-get -y install scribus
   apt-get -y install gnumeric
   apt-get -y install vim
   apt-get -y install gimp gimp-data-extras #Editor de imagens
   apt-get -y install inkscape #Criação de imagens vetoriais
   apt-get -y install blender #Edição 3D
   apt-get -y install kolourpaint4
   apt-get -y install umbrello
   apt-get -y install pencil
   apt-get -y install logisim
   apt-get -y install dia
   apt-get -y install minetest #Estilo minecraft
   apt-get -y install warzone2100
   apt-get -y install wine
   apt-get -y install playonlinux #Rodar programas do Windows
   apt-get -y install openarena
   apt-get -y install flightgear
   apt-get -y install brasero #Gravador de disco
   apt-get -y install vlc #Reprodutor de vídeo
   apt-get -y install rhythmbox #Reprodutor de áudio
   apt-get -y install openshot #Edição de vídeo
   apt-get -y install cinerrela #Edição de vídeo
   apt-get -y install kdenlive #Edição de vídeo
   apt-get -y install virtualbox-qt #Máquina virtual
   apt-get -y install audacity #Editor de áudio
   apt-get -y install cheese #Webcam
   apt-get -y install atom
   apt-get -y install openjdk-8-jre
   apt-get -y install portugol-studio
   apt-get -y install eclipse
   apt-get -y install qtcreator
   apt-get -y install netbeans
   apt-get -y install geany
   apt-get -y install bluefish
   apt-get -y install python
   apt-get -y install perl
   apt-get -y install ipython
   apt-get -y install pycompile
   apt-get -y install mysql-workbench
   apt-get -y install pgadmin3
   apt-get -y install lazarus
   apt-get -y install vim
   apt-get -y install skype
   apt-get -y install openjdk-8-jre
   apt-get -y install vlc
   apt-get -y install rhythmbox
   apt-get -y install wine
   apt-get -y install playonlinux
   apt-get -y install brasero
   apt-get -y install gimp gimp-data-extras
   apt-get -y install qbittorrent
   apt-get -y install libreoffice
   apt-get -y install adobe-flashplugin
   apt-get -y install kolourpaint4


   else
     menu
fi
}

echo -e "${verm}*************************************${NORMAL}"
sleep 0.1
echo -e "${verde}            PROGRAMAS               ${NORMAL}"
sleep 0.1
echo -e "${verm}*************************************${NORMAL}"
sleep 0.1
echo ""
echo -e "${amarelo} 1)${azul} Internet${NORMAL}"
sleep 0.1
echo -e "${amarelo} 2)${azul} Escritório${NORMAL}"
sleep 0.1
echo -e "${amarelo} 3)${azul} Gráficos${NORMAL}"
sleep 0.1
echo -e "${amarelo} 4)${azul} Jogos${NORMAL}"
sleep 0.1
echo -e "${amarelo} 5)${azul} Mídia${NORMAL}"
sleep 0.1
echo -e "${amarelo} 6)${azul} Desenvolvimento${NORMAL}"
sleep 0.1
echo -e "${amarelo} 7)${azul} Pós formatação${NORMAL}"
sleep 0.1
echo -e "${amarelo} 8)${azul} Completo${NORMAL}"
sleep 0.1
echo ""
echo -e "pressione [ Q ] para voltar ao menu principal"
echo -e "${verm}Escolha qual pacote deseja instalar:${NORMAL}"
read -n1 proResp
 while [ proResp != '' ]; do
 case $proResp in

  1) reset;
     internet;
     programas;
     ;;

  2) reset;
     escritorio;
     programas;
     ;;

  3) reset;
     graficos;
     programas;
     ;;

  4) reset;
     jogos;
     programas;
     ;;

  5) reset;
     midia;
     programas;
     ;;

  6) reset;
     dev;
     programas;
     ;;

  7) reset;
     formatacao;
     programas;
     ;;

  8) reset;
     completo;
     programas;
     ;;

  Q | q) fazer;
         ;;

  *) reset;
     programas;

esac
done
}
######################################
#      Setar os comandos do menu     #
#####################################
function fazer() {
  reset
  menu
while [ inst != '' ]
    do

    case $inst in

      A | a) reset;
             instal;
             menu;
             ;;

      B | b) reset;
             remov;
             menu;
             ;;

      C | c) reset;
             repair;
             menu;
             ;;

       D | d) reset;
              achar;
              menu;
              ;;

       E | e) reset;
              location;
              menu;
              ;;

       F | f) reset;
              tema;
              menu;
              ;;

       G | g) reset;
              atual;
              menu;
              ;;

       H | h) reset;
              removeTemas;
              menu;
              ;;

       I | i) reset;
              programas;
              menu;
              ;;

       J | j) reset;
              firew;
              menu;
              ;;


      K | k) reset;
             github;
             menu;
             ;;

     Q | q) reset;
           exit;
            ;;

     *) reset;
        menu;
        ;;
    esac
done
}

if [ `whoami` == "root" ]; then
	fazer;
else
    echo ""
	echo -e $verm "Você precisa ser root digite sua senha e tente novamente${NORMAL}"
    sudo su
fi

else
  echo "Desculpe, esse script só funciona em derivados do Debian"
fi
